CREATE TABLE USERS
(
    ID_USER    UUID PRIMARY KEY,
    EMAIL    VARCHAR(255) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP,

    CONSTRAINT PK_ID_USER PRIMARY KEY (ID_USER),
    CONSTRAINT UNQ_EMAIL UNIQUE (EMAIL)
);

CREATE TABLE PASSWORD_RESET_TOKEN
(
    ID_PSW_RESET_TKN UUID      NOT NULL UNIQUE,
    ID_USER          UUID      NOT NULL,
    TOKEN            UUID      NOT NULL,
    EXPIRY_DATE      TIMESTAMP NOT NULL,
    VALID BOOLEAN NOT NULL DEFAULT TRUE,
    CONSTRAINT PK_PSW_RESET_TKN_ID_PSW_RESET_TKN PRIMARY KEY (ID_PSW_RESET_TKN),
    CONSTRAINT FK_PSW_RESET_TKN_ID_USER FOREIGN KEY (ID_USER) REFERENCES USERS (ID_USER)
);

CREATE TABLE PERMISSIONS
(
    ID_PERMISSION UUID         NOT NULL UNIQUE,
    NAME          VARCHAR(255) NOT NULL UNIQUE,
    DESCRIPTION   VARCHAR(255) NOT NULL,
    CREATED_AT    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT    TIMESTAMP,
    CONSTRAINT PK_ID_PERMISSION PRIMARY KEY (ID_PERMISSION),
    CONSTRAINT UNK_PERM_NAME UNIQUE (NAME)
);

CREATE TABLE PERMISSIONS_USERS
(
    ID_PERMISSION_USER UUID NOT NULL UNIQUE,
    ID_USER            UUID NOT NULL,
    ID_PERMISSION      UUID NOT NULL,
    CREATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT         TIMESTAMP,
    CONSTRAINT PK_PERMI_USER_ID PRIMARY KEY (ID_PERMISSION_USER),
    CONSTRAINT FK_PERM_USER_ID_USER FOREIGN KEY (ID_USER) REFERENCES USERS (ID_USER),
    CONSTRAINT FK_PERM_USER_ID_PERMISSION FOREIGN KEY (ID_PERMISSION) REFERENCES PERMISSIONS (ID_PERMISSION)
);


INSERT INTO USERS(ID_USER, EMAIL, PASSWORD)
VALUES (UUID(), 'facul.lucasilva@gmail.com', '$2a$10$UMQYwohZIup.HkC5zo6fN.Mb9YNrRerhbWTOQIH4r8LMKVLZzAcdi'); -- 123

INSERT INTO PERMISSIONS(ID_PERMISSION, NAME, DESCRIPTION)
VALUES (UUID(), 'ROLE_ADM', 'Permission for admins.');

INSERT INTO PERMISSIONS_USERS(ID_PERMISSION_USER, ID_USER, ID_PERMISSION)
VALUES (UUID(), (SELECT ID_USER FROM USERS WHERE EMAIL = 'facul.lucasilva@gmail.com'),
        (SELECT ID_PERMISSION FROM PERMISSIONS WHERE NAME = 'ROLE_ADM'));
